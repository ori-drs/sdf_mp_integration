<?xml version="1.0"?>
<launch>

  <node name="transform_republish_node" pkg="sdf_mp_integration" type="transform_republish_node"/>
  
  <node name="hsr_python_controller_node" pkg="sdf_mp_integration" type="hsr_python_controller.py"/>

  <param name="transform_topic" type="string" value="transform_topic" />
  <param name="base_goal_sub_topic" type="string" value="/move_base_simple/goal" />
  <param name="pcl_topic" type="string" value="/self_filtered_cloud" />

  <!-- Run the robot self filter  -->

  <include file="$(find hsrb_gazebo_launch)/launch/include/hsrb_gazebo_common.xml">
    <arg name="map" default="$(find tmc_potential_maps)/maps/white_space/map.yaml" />
    <arg name="world_name" value="$(find sdf_mp_integration)/worlds/nbv_exp_empty.world" />
    <arg name="robot_pos" value="-x -0.0 -y 0.0 -z 0.0 -Y 0.0"/>
    <arg name="ground_truth_xyz_offset" value="0.0\ 0.0\ 0.0" />
    <arg name="ground_truth_rpy_offset" value="0.0\ 0.0\ 0.0" />

    <arg name="namespace" value="hsrb"/>
    <arg name="personal_name" value="" />
    <arg name="debug" value="false"/>
    <arg name="gui" value="true" /> 
    <arg name="rviz" value="false"/>
    <arg name="gazebo_visualization" value="false" /> <!-- This shows the laser odom in gazebo -->
    <arg name="use_manipulation" value="true" />
    <arg name="use_navigation" value="true" />
    <arg name="use_perception" value="false" />
    <arg name="use_task" value="false" />
    <arg name="use_teleop" value="false" />
    <arg name="use_web" value="false" />
    <arg name="use_laser_odom" value="true" />
    <arg name="paused" value="false" />
    <arg name="robot_name" value="$(optenv ROBOT_NAME hsrb)" />
  </include>

  <include file="$(find robot_self_filter)/launch/filter.launch">
    <arg name="cloud_in" value="/hsrb/head_rgbd_sensor/depth_registered/rectified_points"/>
    <arg name="cloud_out" value="/self_filtered_cloud"/>
  </include>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find sdf_mp_integration)/config/hsr_vis.rviz" />

  <!-- <node name="moving_obstacle_node" pkg="sdf_mp_integration" type="moving_obstacle_node.py"/> -->

  <!-- <node name="planning_server" pkg="sdf_mp_integration" type="composite_planning_server_node"/> -->

</launch>